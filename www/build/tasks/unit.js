/**
 * Gulp tasks for unit testing.
 */
const display = require("./util/display");
const uc = require("./util/unite-config");
const gulp = require("gulp");
const path = require("path");
const fs = require("fs");
const util = require("util");
const del = require("del");
const runSequence = require("run-sequence");
const moduleConfig = require("./util/module-config");
require("./unit-transpile");
require("./unit-runner");
require("./unit-lint");

gulp.task("unit-clean", async () => {
    const uniteConfig = await uc.getUniteConfig();

    const toClean = [
        path.join(uniteConfig.dirs.www.unitTestDist, "**/*.spec.js"),
        path.join(uniteConfig.dirs.www.reports, "unit/**/*"),
        path.join(uniteConfig.dirs.www.reports, "coverage/**/*"),
        path.join(uniteConfig.dirs.www.reports, "coverage.json"),
        path.join(uniteConfig.dirs.www.reports, "coverage-final.json")
    ];
    display.info("Cleaning", toClean);
    return del(toClean);
});

gulp.task("unit-module-config", async () => {
    const uniteConfig = await uc.getUniteConfig();

    const config = moduleConfig.create(uniteConfig, ["test", "both"], false,
        uniteConfig.unitTestRunner.toLowerCase() === "karma" ? "/base/" : "");

    try {
        await util.promisify(fs.writeFile)(
            path.join(uniteConfig.dirs.www.unitTest, "unit-module-config.js"),
            config);
    } catch (err) {
        display.error("Writing unit-module-config.js", err);
        process.exit(1);
    }
});

gulp.task("unit", async () => {
    try {
        await util.promisify(runSequence)(
            "unit-clean",
            "unit-lint",
            "unit-transpile",
            "unit-module-config",
            "unit-run-test");
    } catch (err) {
        display.error("Unhandled error during task", err);
        process.exit(1);
    }
});

gulp.task("unit-ui", async () => {
    try {
        await util.promisify(runSequence)(
            "unit-clean",
            "unit-lint",
            "unit-transpile",
            "unit-module-config",
            "unit-run-test-ui");
    } catch (err) {
        display.error("Unhandled error during task", err);
        process.exit(1);
    }
});

/* Generated by UniteJS */
