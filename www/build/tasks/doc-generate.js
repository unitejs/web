/**
 * Gulp tasks for producing typedoc documentation.
 */
const fs = require("fs");
const glob = require("glob");
const gulp = require("gulp");
const path = require("path");
const typedoc = require("typedoc");
const util = require("util");
const asyncUtil = require("./util/async-util");
const display = require("./util/display");
const uc = require("./util/unite-config");
gulp.task("doc-generate", async () => {
    display.info("Generating", "TypeDoc");
    const uniteConfig = await uc.getUniteConfig();
    const tsConfigFilename = path.join(process.cwd(), "./typedoc.json");
    const tsConfigExists = await asyncUtil.fileExists(tsConfigFilename);
    let typeDocConfig;
    if (tsConfigExists) {
        const tsConfigContents = await util.promisify(fs.readFile)(tsConfigFilename);
        typeDocConfig = JSON.parse(tsConfigContents.toString());
    }
    const app = new typedoc.Application(typeDocConfig);
    const globAsync = util.promisify(glob);
    const files = await globAsync(path.join(uniteConfig.dirs.www.src, `**/*.${uc.extensionMap(uniteConfig.sourceExtensions)}`));
    app.generateDocs(files, "../docs");
    if (app.logger.hasErrors()) {
        process.exit(1);
    }
});
// Generated by UniteJS
