/**
 * Gulp tasks for karma unit testing.
 */
const display = require("./util/display");
const gulp = require("gulp");
const karma = require("karma");
const minimist = require("minimist");
const uc = require("./util/unite-config");

gulp.task("unit-run-test", async () => {
    display.info("Running", "Karma");

    const knownOptions = {
        "default": {
            "grep": "!(*-bundle|app-module-config|entryPoint)"
        },
        "string": [
            "grep"
        ]
    };

    const options = minimist(process.argv.slice(2), knownOptions);

    const uniteConfig = await uc.getUniteConfig();

    const server = new karma.Server({
        "configFile": "../../../karma.conf.js",
        "coverageReporter": {
            "include": `${uniteConfig.dirs.www.dist}**/${options.grep}.js`
        }
    }, (exitCode) => {
        if (exitCode !== 0) {
            display.error(`Karma exited with code ${exitCode}`);
            process.exit(exitCode);
        }
    });

    server.start();
});

gulp.task("unit-run-test-ui", async () => {
    display.info("Running", "Karma");

    const knownOptions = {
        "default": {
            "grep": "!(*-bundle|app-module-config|entryPoint)"
        },
        "string": [
            "grep"
        ]
    };

    const options = minimist(process.argv.slice(2), knownOptions);

    const uniteConfig = await uc.getUniteConfig();

    const server = new karma.Server({
        "browsers": ["Chrome"],
        "configFile": "../../../karma.conf.js",
        "singleRun": false,
        "coverageReporter": {
            "include": `${uniteConfig.dirs.www.dist}**/${options.grep}.js`
        }
    }, (exitCode) => {
        if (exitCode !== 0) {
            display.error(`Karma exited with code ${exitCode}`);
            process.exit(exitCode);
        }
    });

    server.start();
});

/* Generated by UniteJS */
